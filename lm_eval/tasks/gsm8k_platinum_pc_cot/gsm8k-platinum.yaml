tag:
  - math_word_problems
task: gsm8k_platinum_pc_cot
dataset_path: madrylab/gsm8k-platinum
dataset_name: main
output_type: generate_until
training_split: test
fewshot_split: test
test_split: test
# doc_to_text: "Question: {{question}}\nAnswer:\nGenerate pseudocode chain-of-thought reasoning first and then generate the solution."
doc_to_text:  "Answer the following question. Generate pseudocode chain-of-thought reasoning first and then generate the solution. Question: {{question}}\nAnswer:"
# doc_to_target: "{{answer}}" #" {{answer.split('### ')[-1].rstrip()}}"
doc_to_target: !function utils.doc_to_target
output_type: generate_until
process_results: !function utils.process_results_gen
metric_list:
  - metric: exact_match
    aggregation: mean
    higher_is_better: true
    ignore_case: true
    ignore_punctuation: true
    regexes_to_ignore:
      - ","                      # ignore commas
      - "\\$"                    # ignore dollar signs
      - "(?i).*####\\s*"         # ignore '####'
      - "(?i).*answer is\\s*"
      - "(?i).*answer:\\s*"
      - "(?i).*answer\\s:\\s*"
      - "\\.$"   
generation_kwargs:
  max_gen_toks: 8192
  until:
    - "</s>"
    - "<|end_of_text|>"
    - "<|im_end|>"
  do_sample: false
  temperature: 0.0
repeats: 1
num_fewshot: 5
filter_list:
  - name: "strict-match"
    filter:
      - function: "regex"
        regex_pattern: "#### (\\-?[0-9\\.\\,]+)"
      - function: "take_first"
  - name: "flexible-extract"
    filter:
      - function: "regex"
        group_select: -1
        regex_pattern: "(?i)(?:####|answer is|answer:|answer\\s:)\\s*([^\\s\\n\\r\\.]+)"
      - function: "take_first"
metadata:
  version: 3.0
